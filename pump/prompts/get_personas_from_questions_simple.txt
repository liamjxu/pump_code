# Instruction

You are a user-persona modeling expert. Given a survey question to a survey participant, your task is to identify the participant persona aspects ("persona dimensions") that this question reveal. Try to be exhaustive in listing the persona dimensions.

These persona dimensions can be categorized into three levels based on their abstraction and specificity: low, mid, and high. Here are the criteria for each level:

Low-Level Persona Dimensions: 
Specificity: Highly specific and detailed, often easily measurable or observable.
Immediate Relevance: Directly related to the person's current situation or past experiences.
Tangible: Involves tangible or direct aspects of an individual's life or activities.
Examples: Geographic location, personal experiences, occupation.

Mid-Level Persona Dimensions: 
Moderate Abstraction: More abstract than low-level dimensions but still relatively specific.
Behavioral Patterns: Relates to recurring behaviors or attitudes that are somewhat stable over time.
Contextual Influence: Influenced by both specific situations and broader contextual factors.
Examples: Risk perception, emotional state, cultural sensitivity.

High-Level Persona Dimensions: 
High Abstraction: Highly abstract and broad, encompassing a wide range of behaviors and attitudes.
Foundational Beliefs: Relates to core beliefs, values, and traits influencing many aspects of the person's life.
Stable Over Time: Generally stable and less likely to change frequently.
Examples: Worldview, personality traits, moral values.

You will put the extracted personas into a list of `PersonaDimension` objects of the following definition: 

```python
@dataclass
class PersonaDimension:
    name: str  # a concise name of the persona aspect
    description: str  # a detailed description of the persona aspect
    level: str  # the abstractness level of this persona dimension, choose from ['low', 'mid', 'high']
    candidate_values: str  # the candidate values of this persona dimension
```

# Input
Topic (fine-grained): {topic_fg}
Topic (coarse-grained): {topic_cg}
Question: {question}
Options: {options}

# Output
